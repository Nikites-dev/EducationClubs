@page "/tutor/main"
@using EducationClubs.ScaffoldedModels;
@using Microsoft.EntityFrameworkCore
@using System.Globalization
@using System.Linq
@using System.Threading
@using Microsoft.VisualBasic
@using MudBlazor.Extensions
@inject EducationClubContext EducationClubContext
@inject BehaviourService BehaviourService

@if (isHeadermenuInit)
{
    <HeaderMenu/>    
}
<div class="board">
    @if (isLessonBoardInit)
    {
        <LessonBoard listLesson="_listLesson" AddClassList="_listAdditionalClasses" authTutor="tutor"/>
    }
</div>

@code {
    private List<AdditionalClass> _listAdditionalClasses = new List<AdditionalClass>();
    public List<Lesson> _listLesson = new List<Lesson>(); 
    private Tutor tutor = new Tutor();
    private bool isHeadermenuInit = false;
    private bool isLessonBoardInit = false;

    private DateTime crntTime = DateTime.Now;
    private DateTime firstDayOfWeek = DateTime.Now;
    private DateTime lastDayOfWeek = DateTime.Now;
    
    protected override async Task OnInitializedAsync()
    {
        firstDayOfWeek = System.DateTime.Now.StartOfWeek(System.DayOfWeek.Monday);
        lastDayOfWeek = firstDayOfWeek.AddDays(6);
        
        await GetTutor();
        await GetAdditionalClass();
        await GetListLessonOfWeek();

        isHeadermenuInit = true;
        isLessonBoardInit = true;

    // await Task.Run(() => GetAdditionalClass());
    }
    
   

    async Task GetAdditionalClass()
    {
        _listAdditionalClasses = await EducationClubContext.AdditionalClasses.Where(xo => xo.TutorId == tutor.Id).ToListAsync();
    }

    async Task GetTutor()
    {
        tutor = await EducationClubContext.Tutors.FirstOrDefaultAsync(x => x.AccountId.Value == BehaviourService.authAccount.Id);
    }
    
    async Task GetListLessonOfWeek()
    {
        _listLesson = await EducationClubContext.Lessons.Where(x => 
            x.TimeStart >= firstDayOfWeek &&
            x.TimeFinish <= lastDayOfWeek &&
            x.AdditionalClass.Tutor.Id == tutor.Id
            ).ToListAsync();
    }
}


