@page "/tutor/lesson/new"
@using EducationClubs.ScaffoldedModels;
@using Microsoft.EntityFrameworkCore
@using System.Globalization
@inject EducationClubContext EducationClubContext
@inject BehaviourService BehaviourService

@if (isInitHeademenu)
{
    <HeaderMenu/>   
}

<div class="content-lesson">
    <div class="box-title">
        <p class="content-title">Добавление занятия</p>
    </div>
    <div class="box-content">
        <div class="box-content-row">
            <div class="box-horizontal">
                <MudIcon Icon="@Icons.Material.Filled.Draw" Color="Color.Dark"/>
                <p>Кружок:</p>
            </div>

            <MudSelect Dense="true" T="string" Label="Coffee" Variant="Variant.Outlined">
                
                @if (tutorAdditionalClasses.Count != 0)
                {
                    foreach (var lesson in tutorAdditionalClasses)
                    {
                        <MudSelectItem Value="@(lesson.Title)"/>
                    }
                }
                <MudSelectItem Value="@("Henon Rex")"/>
            </MudSelect>

        </div>
        <div class="box-content-row">
            <div class="box-horizontal">
                <MudIcon Icon="@Icons.Material.Filled.Today" Color="Color.Dark"/>
                <p>День недели:</p>
            </div>

            <MudSelect Dense="true" T="string" Label="Coffee" Variant="Variant.Outlined">
                <MudSelectItem Value="@(GetDayNameRss(1))" />
                <MudSelectItem Value="@(GetDayNameRss(2))" />
                <MudSelectItem Value="@(GetDayNameRss(3))" />
                <MudSelectItem Value="@(GetDayNameRss(4))" />
                <MudSelectItem Value="@(GetDayNameRss(5))" />
                <MudSelectItem Value="@(GetDayNameRss(6))" />
            </MudSelect>
        </div>
        <div class="box-content-row">
         
            <div class="box-horizontal">
                <MudIcon Icon="@Icons.Material.Filled.CalendarMonth" Color="Color.Dark"/>
                <p>Период проведения:</p>
            </div>
            
            <MudStack>
                <MudDateRangePicker Style="padding: 0; margin: 0" @ref="_picker" @bind-DateRange="_dateRange" AutoClose="true">
                    <PickerActions>
                        <MudButton Class="mr-auto align-self-start" OnClick="@(() => _picker.Clear())">Clear</MudButton>
                        <MudButton OnClick="@(() => _picker.Close(false))">Cancel</MudButton>
                        <MudButton Color="Color.Primary" OnClick="@(() => _picker.Close())">Ok</MudButton>
                    </PickerActions>
                </MudDateRangePicker>
            </MudStack>
        </div>
    </div>
    <MudButton Variant="Variant.Filled" Color="Color.Primary" Size="Size.Large" FullWidth="true">Сохранить</MudButton>
</div>

@code {
    private MudDateRangePicker _picker;
    private DateRange _dateRange = new DateRange(DateTime.Now.Date, DateTime.Now.AddDays(5).Date);

    // [Parameter]
    // public Tutor authTutor { get; set; }

    public List<AdditionalClass> tutorAdditionalClasses = new List<AdditionalClass>();

    bool isInitHeademenu;

    protected override async Task OnInitializedAsync()
    {
        await GetAdditionalClass();
        isInitHeademenu = true;
    }
    
    async Task GetAdditionalClass()
    {
        tutorAdditionalClasses = await EducationClubContext.AdditionalClasses.Where(xo => xo.TutorId == BehaviourService.AuthTutor.Id).ToListAsync();
    }

    String getDayOfWeekRu()
    {
       // dt = DateTime.W;
        
        // return dt.ToString("dddd", new CultureInfo("ru-RU")).ToString();

        return ((System.DayOfWeek) ((Convert.ToInt32("1")) % Enum.GetValues(typeof(System.DayOfWeek)).Length)).ToString();
    }

    public static string GetDayNameRss(int dayNumber)
    {
        var culture = CultureInfo.CreateSpecificCulture("ru-RU");
        culture.DateTimeFormat.FirstDayOfWeek = System.DayOfWeek.Sunday;

        var dayNames = culture.DateTimeFormat.DayNames;
       
        return dayNames[dayNumber].Substring(0, 1).ToUpper() + dayNames[dayNumber].Substring(1);
    }

}