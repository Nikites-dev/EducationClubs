@page "/director/clubs"

@using EducationClubs.RazorComponents.Dialogues;
@using EducationClubs.ScaffoldedModels;
@using System.Globalization;
@using Microsoft.EntityFrameworkCore;
@inject IDialogService DialogService
@inject EducationClubContext EducationClubContext
@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager

<MudPaper>
    <MudAppBar Style="margin-top: 2%; background-color: white; display: block; width: 90%; left: 50%; transform: translate(-50%, 0);  box-shadow: rgb(38, 57, 77) 0px 5px 10px -0px; align-items: center; border-radius: 10px">
        <MudButton Href="/director/main">
            Главная страница
        </MudButton>
        <MudButton Href="/director/tutors">
            Преподаватели
        </MudButton>
        <MudButton Href="/director/clubs">
            Кружки
        </MudButton>
        <MudButton Href="/director/students">
            Ученики
        </MudButton>
    </MudAppBar>
    <MudPaper Style="position: absolute; left:15%; top: 15%; align-self: center; width: 70%;  box-shadow: rgb(38, 57, 77) 0px 5px 10px -0px;">
        <MudTable Items="@Elements" Filter="new Func<AdditionalClass,bool>(FilterFuncOne)" @bind-SelectedItem="selectedItem">
            <ToolBarContent>
                <MudTextField @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
                <MudSpacer />
                <MudButton Variant="Variant.Outlined" Color="Color.Info" Style="width: 20%; margin: 5px" @onclick="() => OpenDialog(null)">Добавить кружок</MudButton>
            </ToolBarContent>
            <HeaderContent>
                <MudTh>Название</MudTh>
                <MudTh>Руководитель</MudTh>
                <MudTh>Просмотреть</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Название">@context.Title</MudTd>
                <MudTd DataLabel="Руководитель">@EducationClubContext.Tutors.Where(x => x.Id == context.TutorId).FirstOrDefault().Surname @EducationClubContext.Tutors.Where(x => x.Id == context.TutorId).FirstOrDefault().Name @EducationClubContext.Tutors.Where(x => x.Id == context.TutorId).FirstOrDefault().Patronymic</MudTd>
                <MudTd DataLabel="Просмотреть"><MudButton Variant="Variant.Outlined" Color="Color.Info" @onclick="() => OpenDialog(context)">Просмотр</MudButton></MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager PageSizeOptions="new int[] { 8 }" />
            </PagerContent>
        </MudTable>
    </MudPaper>
</MudPaper>

<MudDialog Class="content" @bind-IsVisible="visible">
    <TitleContent>
        <MudText Style="font-size: 18px">
            Добавление кружка:
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudText Style="font-size: 16px">
            Наименование:
        </MudText>
        <MudTextField T="String" Variant="Variant.Text" Style="font-size: 16px; margin: 0; margin-bottom: 10px" @bind-Value="@title" />
        <MudText Style="font-size: 16px">
            Учитель:
        </MudText>
        <MudSelect T="String" @bind-Value="@tutor" Style="font-size: 16px; margin: 0; margin-bottom: 10px">
            @foreach (var tutor in Tutors)
            {
                <MudSelectItem Value="@tutor.Id.ToString()">
                    @tutor.Surname @tutor.Name @tutor.Patronymic
                </MudSelectItem>
            }
        </MudSelect>
        <MudButton Variant="Variant.Outlined" Color="Color.Info" Class="d-flex mx-auto" Style="margin: 15px" @onclick="AddingNewClub">
            Сохранить
        </MudButton>
    </DialogContent>
</MudDialog>



@code {
    private IEnumerable<Tutor> Tutors = new List<Tutor>();
    string tutorId;
    string title;
    string tutor;
    private bool visible;
    AdditionalClass club;
    private string searchString = "";
    private AdditionalClass selectedItem = new AdditionalClass();
    private HashSet<AdditionalClass> selectedItems = new HashSet<AdditionalClass>();

    private IEnumerable<AdditionalClass> Elements = new List<AdditionalClass>();

    protected override void OnInitialized()
    {
        Elements = EducationClubContext.AdditionalClasses.ToList();

        Tutors = EducationClubContext.Tutors.ToList();
    }

    private void OpenDialog(AdditionalClass additionalClass)
    {
        if (additionalClass != null)
        {
            club = additionalClass;
            title = club.Title;
            tutor = club.TutorId.ToString();
            //tutor = EducationClubContext.Tutors.Where(x => x.Id == club.TutorId).FirstOrDefault().Id.ToString();
        }
        else
        {
            club = null;
        }

        visible = true;
    }

    private bool FilterFuncOne(AdditionalClass element) => FilterFunc(element, searchString);

    private bool FilterFunc(AdditionalClass element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.Title.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (EducationClubContext.Tutors.Where(x => x.Id == element.TutorId).FirstOrDefault().Surname.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }

    void AddingNewClub()
    {
        if (title != null && tutor != null)
        {
            if (club == null)
            {
                if (EducationClubContext.AdditionalClasses.Where(x => x.Title == title).FirstOrDefault() == null)
                { 
                    AdditionalClass newClub = new AdditionalClass()
                    {
                        Title = title,
                        IsActive = true,
                        TutorId = int.Parse(tutor)
                    };

                    EducationClubContext.AdditionalClasses.Add(newClub);
                    EducationClubContext.SaveChanges();
                    Snackbar.Add("Кружок успешно добавлен!", Severity.Success);
                    visible = false;
                    Elements = EducationClubContext.AdditionalClasses.ToList();
                }
                else
                {
                    Snackbar.Add("Такой кружок уже существует", Severity.Warning);
                }
            }
            else
            {
                club.Title = title;
                club.TutorId = int.Parse(tutor);

                //EducationClubContext.AdditionalClasses.Where(x => x.Id == club.Id).FirstOrDefault().Title = title;
                //EducationClubContext.AdditionalClasses.Where(x => x.Id == club.Id).FirstOrDefault().TutorId = int.Parse(tutor);

                EducationClubContext.AdditionalClasses.Update(club);
                EducationClubContext.SaveChanges();
                Snackbar.Add("Кружок успешно изменен!", Severity.Success);
                visible = false;
                club = null;
                NavigationManager.NavigateTo("/director/clubs");
            }
        }

    }
}