@using Microsoft.EntityFrameworkCore
@inject AppGeneralSettings _appGeneralSettings
@using EducationClubs.ScaffoldedModels
@using Microsoft.IdentityModel.Tokens
@inject EducationClubContext EducationClubContext
@inject NavigationManager NavigationManager
@inject FileUploaderService FileUploaderService

<MudAppBar Style="margin-top: 1%; background-image: linear-gradient(180deg, #ced8e3 0%, #3567bf 80%); display: block; width: 95%; height: 8%; left: 50%; transform: translate(-50%, 0);  box-shadow: rgb(38, 57, 77) 0px 5px 10px -0px; align-items: center; border-radius: 10px">
    <div class="box1">

        <MudButton Style="color: white;">
            @Title
        </MudButton>
    </div>
    
    @if (_appGeneralSettings.authAccount?.RoleId == 2 || _tutor.AccountId != null)
    {
        <div class="box-profile" @onclick="(() => OpenPage(TUTOR_PROFILE))">
            <p class="title-text">@_tutor.Name</p>
            <p class="title-text">@_tutor.Surname</p>
           
            <div>
                @if (!imgUrl.IsNullOrEmpty())
                {
                    <img alt="img2" height="50" src="@imgUrl"/>
                }
                else
                {
                    <img alt="img2" height="50" src="https://users.cf.talkfusion.com/default-user-profile-image.png"/>
                }
            </div>
        </div>
    }
    else
    {
        <MudButton Href="/director/main">
            Главная страница
        </MudButton>
        <MudButton Href="/director/tutors">
            Преподаватели
        </MudButton>
        <MudButton Href="/director/clubs">
            Кружки
        </MudButton>
        <MudButton Href="/director/students">
            Ученики
        </MudButton>
    }
</MudAppBar>

@code {
    private Tutor _tutor = new Tutor();
    private bool isTutor = true;
        
    const String TUTOR_MAIN= "/tutor/main";
    const String TUTOR_LESSON_NEW= "/tutor/lesson/new";
    const String TUTOR_PROFILE= "/tutor/profile";
    
    String imgAuthTutor = "";

    [Parameter]
    public String imgUrl { get; set; }  

    [Parameter]
    public String Title { get; set; }  
    
    private string ValueChange { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        if (_appGeneralSettings.authAccount != null && _appGeneralSettings.authAccount.Id == 2)
        {
            _tutor = _appGeneralSettings.AuthTutor;
            imgUrl = await FileUploaderService.GetImage(Folder.TUTOR, _appGeneralSettings.AuthTutor.Id.ToString());
        }
        else
        {
            _tutor.Name = "Директор";
            _tutor.Surname = "";
        }
    }

    void OpenPage(String deeplink)
    {
        NavigationManager.NavigateTo(deeplink);
    }
}