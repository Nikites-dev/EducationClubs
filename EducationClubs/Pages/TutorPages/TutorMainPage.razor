@page "/tutor/main"
@using EducationClubs.ScaffoldedModels;
@using Microsoft.EntityFrameworkCore
@using System.Globalization
@using System.Linq
@using System.Threading
@using Microsoft.VisualBasic
@using MudBlazor.Extensions
@inject EducationClubContext EducationClubContext
@inject AppGeneralSettings AppGeneralSettings

<div class="background">

@if (AppGeneralSettings.authAccount == null)
{
    <p>403</p><div>&nbsp;</div>
    <p>Forbidden</p>
}
else
{
    <div>&nbsp;</div>
}
</div>

@if (isHeadermenuInit)
{
    <HeaderMenu/>    
}
<div class="board">
    @if (isLessonBoardInit)
    {
        <LessonBoard listLesson="_listLesson" AddClassList="_listAdditionalClasses" authTutor="AppGeneralSettings.AuthTutor"/>
    }
</div>

@code {
    private List<AdditionalClass> _listAdditionalClasses = new List<AdditionalClass>();
    public List<Lesson> _listLesson = new List<Lesson>();
    private bool isHeadermenuInit = false;
    private bool isLessonBoardInit = false;
    
    private DateTime firstDayOfWeek = DateTime.Now;
    private DateTime lastDayOfWeek = DateTime.Now;
    
    protected override async Task OnInitializedAsync()
    {
        if (AppGeneralSettings.authAccount == null)
        {
            return;
        }

        if (AppGeneralSettings.AuthTutor == null)
        {
            return;
        }
        
        firstDayOfWeek = System.DateTime.Now.StartOfWeek(System.DayOfWeek.Monday);
        lastDayOfWeek = firstDayOfWeek.AddDays(6);
        
        await GetAdditionalClass();
        await GetListLessonOfWeek();

        isHeadermenuInit = true;
        isLessonBoardInit = true;
        
        // await Task.Run(() => GetAdditionalClass());
    }

    async Task GetAdditionalClass()
    {
        _listAdditionalClasses = await EducationClubContext.AdditionalClasses.Where(xo => AppGeneralSettings.AuthTutor != null && xo.TutorId == AppGeneralSettings.AuthTutor.Id).ToListAsync();
    }

    async Task GetListLessonOfWeek()
    {
        _listLesson = await EducationClubContext.Lessons.Where(x => 
            x.AdditionalClass != null && AppGeneralSettings.AuthTutor != null && x.TimeStart >= firstDayOfWeek && x.TimeFinish <= lastDayOfWeek && x.AdditionalClass.Tutor.Id == AppGeneralSettings.AuthTutor.Id
            ).ToListAsync();
    }
}


