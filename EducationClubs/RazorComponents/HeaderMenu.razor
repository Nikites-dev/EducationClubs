@using Microsoft.EntityFrameworkCore
@inject BehaviourService BehaviourService
@inject EducationClubContext EducationClubContext
@inject NavigationManager NavigationManager
@using EducationClubs.ScaffoldedModels;

<div class="menuHeader">
    <div class="box1">
        <div>
            <p class="app" onclick="@OpenMainPage">Educatucation Club</p>    
        </div>
        
        <div class="nav-btns">
            <MudButton Style="background-color: #f4f7fe; color: #4318ff" Variant="Variant.Filled"  StartIcon="@Icons.Material.Filled.Add" @onclick="@OpenNewLessonPage">Занятие</MudButton>
        </div>
    </div>

    @if (_tutor.AccountId != 0 || _tutor.AccountId != null)
    {
        <div class="box-profile">
            <p class="title-text">@_tutor.Name</p>
            <p class="title-text">@_tutor.Surname</p>
           
            <div class="img-circle">
                <img alt="img" height="40" src="https://i5.imageban.ru/out/2023/03/07/1ef9c562b15e251bad06d9eb11cc1afe.jpg"/>    
            </div>
        </div>
    }   
</div>

@code {
    private Tutor _tutor = new Tutor();
    private bool isTutor = true;

    protected override async Task OnInitializedAsync()
    {
        if (BehaviourService.authAccount != null)
        {
            await GetTutor();
        }
        else
        {
            _tutor.Name = "First Name";
            _tutor.Surname = "Last Name";
        }
    }

    async Task GetTutor()
    {
        _tutor = await EducationClubContext.Tutors.FirstOrDefaultAsync(tutor => tutor.AccountId == BehaviourService.authAccount.Id);
    }

    void OpenNewLessonPage()
    {
        NavigationManager.NavigateTo("/tutor/lesson/new");
    }
    
    void OpenMainPage()
    {
        NavigationManager.NavigateTo("/tutor/main");
    }
}