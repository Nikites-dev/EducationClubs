@page "/director/tutors"

@using EducationClubs.RazorComponents.Dialogues;
@using EducationClubs.ScaffoldedModels
@using System.Globalization
@inject IDialogService DialogService
@inject EducationClubContext EducationClubContext

<HeaderMenu Title="Преподаватели"/>
        <MudTable Items="@Elements" Filter="new Func<Tutor,bool>(FilterFuncOne)" @bind-SelectedItem="selectedItem" Style="position: absolute; left:10%; top: 15%; align-self: center; width: 80%; box-shadow: rgb(38, 57, 77) 0px 5px 10px -0px; border-radius: 10px">
            <ToolBarContent>
                <MudTextField @bind-Value="searchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
                <MudSpacer />
        <MudButton Variant="Variant.Outlined" Style="width: 23%; margin: 5px; font-size: 16px; border: 3px solid #658dc3; color: #658dc3; border-radius: 10px" @onclick="@OpenDialog">Добавить учителя</MudButton>
            </ToolBarContent>
            <HeaderContent>
                <MudTh>Фамилия</MudTh>
                <MudTh>Имя</MudTh>
                <MudTh>Отчество</MudTh>
                <MudTh>Просмотреть</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Фамилия">@context.Surname</MudTd>
                <MudTd DataLabel="Имя">@context.Name</MudTd>
                <MudTd DataLabel="Отчество">@context.Patronymic</MudTd>
        <MudTd DataLabel="Просмотреть"><MudButton Variant="Variant.Outlined" Style="font-size: 16px; border: 2px solid #658dc3; color: #658dc3; border-radius: 8px">Просмотр</MudButton></MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager PageSizeOptions="new int[] { 5 }" />
            </PagerContent>
        </MudTable>

@code {
    private string searchString = "";
    private Tutor selectedItem = new Tutor();
    private HashSet<Tutor> selectedItems = new HashSet<Tutor>();

    private IEnumerable<Tutor> Elements = new List<Tutor>();

    protected override void OnInitialized()
    {
        Elements = EducationClubContext.Tutors.ToList();
    }

    private bool FilterFuncOne(Tutor element) => FilterFunc(element, searchString);

    private bool FilterFunc(Tutor element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.Surname.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.Patronymic.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }

    private void OpenDialog()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        DialogService.Show<TutorAddingDialog>("", options);
    }
}